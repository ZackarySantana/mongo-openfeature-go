name: Release

permissions:
    contents: write # Needed to create/update Releases

on:
    push:
        tags:
            - "v*.*.*" # only run on semver tags
    workflow_dispatch: # manual trigger
        inputs:
            tag_name:
                description: "Tag to build & release"
                required: true
                default: ""

jobs:
    build_and_release:
        name: Build & Publish ${{ matrix.app }}-${{ matrix.goos }}-${{ matrix.goarch }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                app: [editor, mcp]
                goos: [linux, windows, darwin]
                goarch: [amd64, arm64]
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup Go
              uses: actions/setup-go@v3
              with:
                  go-version: "1.24"

            - name: Build ${{ matrix.app }}
              run: |
                  mkdir -p out
                  ext=""
                  if [ "${{ matrix.goos }}" = "windows" ]; then
                    ext=".exe"
                  fi
                  GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
                    go build \
                    -o out/${{ matrix.app }}-${{ matrix.goos }}-${{ matrix.goarch }}${ext} \
                    ./cmd/${{ matrix.app }}/main.go

            - name: Package
              run: |
                  cd out
                  base=${{ matrix.app }}-${{ matrix.goos }}-${{ matrix.goarch }}
                  if [ "${{ matrix.goos }}" = "windows" ]; then
                    zip -r ${base}.zip ${base}.exe
                  else
                    tar czf ${base}.tar.gz ${base}
                  fi

            - name: Debug list outputs
              run: ls -l out

            - name: Create/Update GitHub Release & Upload Asset
              uses: softprops/action-gh-release@v2
              with:
                  # glob will match exactly one file in out/
                  files: out/${{ matrix.app }}-${{ matrix.goos }}-\
                      ${{ matrix.goarch }}.*
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
